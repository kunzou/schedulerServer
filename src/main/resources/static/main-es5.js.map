{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/calendar/calendar.component.ts","webpack:///src/app/calendar/calendar.component.html","webpack:///src/app/callback/callback.component.ts","webpack:///src/app/callback/callback.component.html","webpack:///src/app/edit-schedule/edit-schedule.component.ts","webpack:///src/app/edit-schedule/edit-schedule.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/service/auth.service.ts","webpack:///src/app/service/event.service.ts","webpack:///src/app/service/schedule.service.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","page","pageSize","collectionSize","COUNTRIES","length","map","country","i","slice","selector","templateUrl","styleUrls","name","flag","area","population","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useFactory","declarations","providers","bootstrap","$event","event","colors","red","primary","secondary","blue","yellow","CalendarComponent","modal","eventService","route","reload","view","Month","CalendarView","viewDate","Date","_success","_showButton","refresh","getEvents","next","subscribe","message","reservationResponse","showButton","showReserveButton","snapshot","paramMap","get","getCalendarEventsByScheduleId","res","scheduleEvents","dayStartHour","parseInt","toString","split","dayEndHour","events","forEach","available","color","start","end","push","date","Day","action","modalData","open","modalContent","size","addReservation","scheduleId","guestFirstName","guestLastName","guestEmail","guestMessage","response","responseType","showMessage","error","setView","changeDetection","OnPush","static","CallbackComponent","authService","handleLoginCallback","EditScheduleComponent","scheduleService","location","auth","reloadCalendar","getSchedule","userEmail$","email","submitMessage","getScheduleById","schedule","userEmail","save","delete","back","ProfileComponent","router","userid$","userid","getSchedulesByUserId","schedules","createSchedule","userId","navigate","window","global","AuthService","auth0","clientID","domain","redirectUri","redirect","audience","scope","useridSubject$","userEmailSubject$","asObservable","getAccessToken","authorize","parseHash","err","authResult","accessToken","hash","getUserInfo","console","checkSession","client","userInfo","profile","_setSession","expiresAt","expiresIn","now","authenticated","sub","sessionStorage","clear","logout","returnTo","EventService","http","baseUrl","httpOptions","headers","observe","url","calendarEvent","post","providedIn","ScheduleService","WelcomeComponent","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n  page = 1;\n  pageSize = 4;\n  collectionSize = COUNTRIES.length;\n\n  get countries(): Country[] {\n    return COUNTRIES\n      .map((country, i) => ({id: i + 1, ...country}))\n      .slice((this.page - 1) * this.pageSize, (this.page - 1) * this.pageSize + this.pageSize);\n  }\n}\n\ninterface Country {\n  id?: number;\n  name: string;\n  flag: string;\n  area: number;\n  population: number;\n}\n\nconst COUNTRIES: Country[] = [\n  {\n    name: 'Russia',\n    flag: 'f/f3/Flag_of_Russia.svg',\n    area: 17075200,\n    population: 146989754\n  },\n  {\n    name: 'France',\n    flag: 'c/c3/Flag_of_France.svg',\n    area: 640679,\n    population: 64979548\n  },\n  {\n    name: 'Germany',\n    flag: 'b/ba/Flag_of_Germany.svg',\n    area: 357114,\n    population: 82114224\n  },\n  {\n    name: 'Portugal',\n    flag: '5/5c/Flag_of_Portugal.svg',\n    area: 92090,\n    population: 10329506\n  },\n  {\n    name: 'Canada',\n    flag: 'c/cf/Flag_of_Canada.svg',\n    area: 9976140,\n    population: 36624199\n  },\n  {\n    name: 'Vietnam',\n    flag: '2/21/Flag_of_Vietnam.svg',\n    area: 331212,\n    population: 95540800\n  },\n  {\n    name: 'Brazil',\n    flag: '0/05/Flag_of_Brazil.svg',\n    area: 8515767,\n    population: 209288278\n  },\n  {\n    name: 'Mexico',\n    flag: 'f/fc/Flag_of_Mexico.svg',\n    area: 1964375,\n    population: 129163276\n  },\n  {\n    name: 'United States',\n    flag: 'a/a4/Flag_of_the_United_States.svg',\n    area: 9629091,\n    population: 324459463\n  },\n  {\n    name: 'India',\n    flag: '4/41/Flag_of_India.svg',\n    area: 3287263,\n    population: 1324171354\n  },\n  {\n    name: 'Indonesia',\n    flag: '9/9f/Flag_of_Indonesia.svg',\n    area: 1910931,\n    population: 263991379\n  },\n  {\n    name: 'Tuvalu',\n    flag: '3/38/Flag_of_Tuvalu.svg',\n    area: 26,\n    population: 11097\n  },\n  {\n    name: 'China',\n    flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\n    area: 9596960,\n    population: 1409517397\n  }\n];","<div class=\"container pt-5\">\n   \n    <table class=\"table table-striped\">\n        <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Country</th>\n                <th scope=\"col\">Area</th>\n                <th scope=\"col\">Population</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let country of countries\">\n                <th scope=\"row\">{{ country.id }}</th>\n                <td>\n                    <img [src]=\"'https://upload.wikimedia.org/wikipedia/commons/' + country.flag\" class=\"mr-2\" style=\"width: 20px\">\n                    {{ country.name }}\n                </td>\n                <td>{{ country.area | number}}</td>\n                <td>{{ country.population | number }}</td>\n            </tr>\n        </tbody>\n    </table>\n    \n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { EditScheduleComponent } from './edit-schedule/edit-schedule.component';\nimport { CallbackComponent } from './callback/callback.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/welcome', pathMatch: 'full' },\n  { path: 'calendar/:id', component: CalendarComponent },  \n  { path: 'admin', component: AdminComponent },  \n  { path: 'welcome', component: WelcomeComponent },  \n  { path: 'callback', component: CallbackComponent },  \n  { path: 'profile', component: ProfileComponent },  \n  { path: 'edit/:id', component: EditScheduleComponent },  \n];\n\n@NgModule({\n  imports: [\n    NgbModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'scheduler';\n  constructor() {\n    // auth.getAccessToken();\n  }  \n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule }    from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AdminComponent } from './admin/admin.component';\nimport {AuthService} from 'src/app/service/auth.service';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { EditScheduleComponent } from './edit-schedule/edit-schedule.component';\nimport { CallbackComponent } from './callback/callback.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalendarComponent,\n    AdminComponent,\n    WelcomeComponent,\n    EditScheduleComponent,\n    CallbackComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgbModule,\n    FlatpickrModule.forRoot(),    \n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory })\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  Input,\n  ElementRef\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours,\n  max\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView\n} from 'angular-calendar';\n\nimport { EventService } from 'src/app/service/event.service';\nimport { ScheduleEvent } from 'src/app/domain/scheduleEvent';\nimport { ActivatedRoute } from '@angular/router';\nimport { ScheduleEventsResponse } from '../domain/scheduleEventsResponse';\nimport { Appointment } from '../domain/appointment';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n@Component({\n  selector: 'app-calendar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n  @Input() reload: Subject<boolean> = new Subject<boolean>();\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n  viewDate: Date = new Date();\n  private _success = new Subject<string>();\n  private _showButton = new Subject<boolean>();\n  refresh: Subject<any> = new Subject();\n  reservationResponse: string;\n  responseType: any;\n  showReserveButton: boolean;\n  dayStartHour: number;\n  dayEndHour: number;\n\n  modalData: {\n    action: string;\n    event: ScheduleEvent;\n  };\n\n  events: ScheduleEvent[];\n\n  guestFirstName: string;\n  guestLastName: string;\n  guestEmail: string;\n  guestMessage: string;\n  // guestConsent: boolean;  \n\n  constructor(\n    private modal: NgbModal,\n    private eventService: EventService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.getEvents();\n    this.refresh.next();\n\n    this._success.subscribe((message) => this.reservationResponse = message);\n    this._showButton.subscribe((showButton) => this.showReserveButton = showButton);\n    this.reload.subscribe(reload => {\n      if(reload) {\n        this.getEvents();\n      }\n    })\n  }\n\n  getEvents() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.eventService.getCalendarEventsByScheduleId(id).subscribe((res:ScheduleEventsResponse) => {\n      if(res.scheduleEvents != null) {\n        this.dayStartHour = parseInt(res.dayStartHour.toString().split(\":\")[0], 10);\n        this.dayEndHour = parseInt(res.dayEndHour.toString().split(\":\")[0], 10);\n        this.events =[];\n        res.scheduleEvents.forEach(event => {\n          if(event.available > 0) {\n            event.color = colors.blue;\n          } else {\n            event.color = colors.red;\n          }\n          \n          event.start = new Date(event.start);\n          event.end = new Date(event.end);\n          event.title = 'Available: ' + event.available;\n          this.events.push(event);\n        })\n        this.refresh.next();\n      }\n    });\n  }\n\n  changeDay(date: Date) {\n    this.viewDate = date;\n    this.view = CalendarView.Day;\n  }  \n\n  handleEvent(action: string, event: ScheduleEvent): void {\n    if(event.available > 0) {\n      this.reservationResponse = null;\n      this.showReserveButton = event.available > 0;\n      this.modalData = { event, action };\n      this.modal.open(this.modalContent, { size: 'lg' });\n    }\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  makeReservation(event: ScheduleEvent) {\n    this.eventService.addReservation({\n      scheduleId: this.route.snapshot.paramMap.get('id'),\n      start: event.start,\n      end: event.end,\n      guestFirstName: this.guestFirstName,\n      guestLastName: this.guestLastName,\n      guestEmail: this.guestEmail,\n      guestMessage: this.guestMessage  \n    } as Appointment).subscribe(\n      (response) => {\n        this.responseType = \"success\";\n        this.reservationResponse = \"DONE\";\n        this.showReserveButton = false;\n        this.getEvents();\n        this.showMessage();\n      },\n      (error) => {\n        this.responseType = \"danger\";\n        this.reservationResponse = \"OOPS\";\n        this.getEvents();\n        this.showMessage();\n      }\n    );    \n  }\n\n  showMessage() {\n    this._success.next(this.reservationResponse);\n    this._showButton.next(this.showReserveButton);\n  }   \n}","<div class=\"container pt-5\" >\n  \n  <div class=\"row text-center\">\n    <div class=\"col-md-4\">\n      <div class=\"btn-group\">\n        <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\">\n          <!-- (viewDateChange)=\"closeOpenMonthViewDay()\" -->\n          Previous\n        </div>\n        <div class=\"btn btn-outline-secondary\" mwlCalendarToday [(viewDate)]=\"viewDate\">\n          Today\n        </div>\n        <div class=\"btn btn-primary\" mwlCalendarNextView  [view]=\"view\" [(viewDate)]=\"viewDate\">\n          <!-- (viewDateChange)=\"closeOpenMonthViewDay()\" -->\n          Next\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\n    </div>\n    <div class=\"col-md-4\">\n      <div class=\"btn-group\">\n        <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month)\" [class.active]=\"view === CalendarView.Month\">\n          Month\n        </div>\n        <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Day)\" [class.active]=\"view === CalendarView.Day\">\n          Day\n        </div>\n      </div>\n    </div>\n  </div>\n  <br />\n\n  <div [ngSwitch]=\"view\">\n    <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" \n      [viewDate]=\"viewDate\" \n      [events]=\"events\"\n      [refresh]=\"refresh\" \n      (dayClicked)=\"changeDay($event.day.date)\">\n    </mwl-calendar-month-view>\n    <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" \n      [viewDate]=\"viewDate\" \n      [events]=\"events\" \n      [refresh]=\"refresh\"\n      [dayStartHour]=\"dayStartHour\"\n      [dayEndHour]=\"dayEndHour\"        \n      (eventClicked)=\"handleEvent('Clicked', $event.event)\">\n    </mwl-calendar-day-view>\n  </div>\n\n  \n  <ng-template #modalContent let-close=\"close\">\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title\">From {{modalData?.event.start | date:'HH:mm'}} to {{modalData?.event.end | date:'HH:mm, E, MMM dd, yyyy'}}</h5>\n    </div>\n    <div class=\"modal-body\">\n      <div *ngIf=\"reservationResponse\">\n        <ngb-alert [type]=\"responseType\" [dismissible]=\"false\">{{reservationResponse}}</ngb-alert>\n      </div>        \n      <div>\n        <form (ngSubmit)=\"makeReservation(modalData?.event)\" #guestForm=\"ngForm\">\n          <div class=\"form-row\">\n            <div class=\"col-md-4 mb-3\">\n              <label for=\"guestFirstName\">First name</label>\n              <input type=\"text\" class=\"form-control\" id=\"guestFirstName\" [(ngModel)]=\"guestFirstName\" name=\"guestFirstName\" required>\n            </div>\n            <div class=\"col-md-4 mb-3\">\n              <label for=\"guestLastName\">Last name</label>\n              <input type=\"text\" class=\"form-control\" id=\"guestLastName\" [(ngModel)]=\"guestLastName\" name=\"guestLastName\" required>\n            </div>         \n          </div>\n          <div class=\"form-row\">\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"guestEmail\">Email Address</label>\n              <input type=\"email\" class=\"form-control\" id=\"guestEmail\" [(ngModel)]=\"guestEmail\" name=\"guestEmail\" required>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"guestComment\">Your Comment</label>\n            <textarea class=\"form-control\" id=\"guestComment\" [(ngModel)]=\"guestMessage\" name=\"guestComment\" rows=\"3\"></textarea>\n          </div>       \n          <div class=\"form-group\">\n            <div class=\"custom-control custom-checkbox\">\n              <input class=\"custom-control-input\" type=\"checkbox\" value=\"\" id=\"guestConsent\" [(ngModel)]=\"modalData?.event.guestConsent\" name=\"guestConsent\" required>\n              <label class=\"custom-control-label\" for=\"guestConsent\">\n                Agree with terms and conditions\n              </label>\n            </div>\n          </div>\n        </form>        \n      </div>  \n    </div>\n    <div class=\"modal-footer\">\n      <button *ngIf=\"showReserveButton\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!guestForm.form.valid\" (click)=\"makeReservation(modalData?.event)\">\n        Reserve\n      </button>      \n      <button #closeModal data-dismiss=\"modal\" class=\"btn btn-outline-secondary\" (click)=\"close()\">\n        Close\n      </button>\n    </div>\n  </ng-template>\n  \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.handleLoginCallback();\n  }\n\n}\n","<p>\n    Loading...\n</p>","import { Component, OnInit } from '@angular/core';\nimport { Schedule } from '../domain/schedule';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Location } from '@angular/common';\n\nimport { ScheduleService } from '../service/schedule.service';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-edit-schedule',\n  templateUrl: './edit-schedule.component.html',\n  styleUrls: ['./edit-schedule.component.css']\n})\nexport class EditScheduleComponent implements OnInit {\n  schedule: Schedule;\n  private _success = new Subject<string>();\n  reloadCalendar: Subject<boolean> = new Subject<boolean>();\n  responseType: string;\n  submitMessage: string;\n  email:string\n  constructor(\n    private route: ActivatedRoute,\n    private scheduleService: ScheduleService,\n    private location: Location,\n    private auth: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.getSchedule();\n    this.auth.userEmail$.subscribe(email => {\n      this.email = email\n    })\n    this._success.subscribe((message) => this.submitMessage = message);\n  }\n\n  getSchedule(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.scheduleService.getScheduleById(id)\n      .subscribe(schedule => {\n        this.schedule = schedule;\n      });\n  }\n\n  save() {\n    this.schedule.userEmail = this.email;\n    this.scheduleService.save(this.schedule).subscribe(\n      (response) => {\n        this.responseType = \"success\";\n        this.submitMessage = \"Saved\";\n        this.showMessage();\n        this.reloadCalendar.next(true);\n      },\n      (error) => {\n        this.responseType = \"danger\";\n        this.submitMessage = \"OOPS\";\n        this.showMessage();\n      }\n    );\n  }\n\n  showMessage() {\n    this._success.next(\"Saved!\");\n  }\n\n  delete() {\n    this.scheduleService.delete(this.route.snapshot.paramMap.get('id')).subscribe(()=>this.location.back());\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","<div class=\"container pt-3\" *ngIf=\"schedule != null\">\n    <ngb-alert *ngIf=\"submitMessage\" type=\"success\" >{{ submitMessage }}</ngb-alert>\n    <form (ngSubmit)=\"save()\" #guestForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"name\">Name of This Schedule</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Name of This Schedule\" [(ngModel)]=\"schedule.name\" name=\"name\" required>\n        </div>\n\n        <div class=\"form-group row\">\n            <label for=\"openHour\" class=\"col-sm-2 col-form-label\">Open Hour</label>\n            <div class=\"col-md-3\">\n              <input type=\"time\" class=\"form-control\" id=\"openHour\" placeholder=\"hh-mm\" [(ngModel)]=\"schedule.openHour\" name=\"openHour\" required>\n            </div>\n        </div>    \n        <div class=\"form-group row\">\n            <label for=\"closeHour\" class=\"col-sm-2 col-form-label\">Close Hour</label>\n            <div class=\"col-md-3\">\n              <input type=\"time\" class=\"form-control\" id=\"closeHour\" placeholder=\"hh-mm\" [(ngModel)]=\"schedule.closeHour\" name=\"closeHour\" required>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"eventInterval\" class=\"col-sm-2 col-form-label\">Event Interval in minutes</label>\n            <div class=\"col-sm-3\">\n              <input type=\"number\" class=\"form-control\" id=\"eventInterval\" placeholder=\"hh-mm\" [(ngModel)]=\"schedule.eventInterval\" name=\"eventInterval\" required>\n            </div>\n        </div>          \n        <div class=\"form-group row\">\n            <label for=\"availability\" class=\"col-sm-2 col-form-label\">Availability</label>\n            <div class=\"col-sm-3\">\n              <input type=\"number\" class=\"form-control\" id=\"availability\" [(ngModel)]=\"schedule.availability\" name=\"availability\" required>\n            </div>\n        </div>    \n        <div class=\"form-group row\">\n            <label for=\"maxAllowedDaysFromNow\" class=\"col-sm-2 col-form-label\">Max Days From Now</label>\n            <div class=\"col-sm-3\">\n              <input type=\"number\" class=\"form-control\" id=\"maxAllowedDaysFromNow\" [(ngModel)]=\"schedule.maxAllowedDaysFromNow\" name=\"maxAllowedDaysFromNow\" required>\n            </div>\n        </div> \n        <div class=\"form-row\">\n          <div class=\"col-md-6 mb-3\">\n            <label for=\"guestEmail\">Email Address. Please make sure your email address is correct. Confirmation emails will be sent to this email address</label>\n            <input type=\"email\" class=\"form-control\" id=\"guestEmail\" [(ngModel)]=\"email\" name=\"guestEmail\" required>\n          </div>\n        </div>                          \n        <div class=\"form-group\">\n          <div class=\"custom-control custom-checkbox\">\n            <input class=\"custom-control-input\" type=\"checkbox\" value=\"\" id=\"consent\" [(ngModel)]=\"schedule.termsAndConditions\" name=\"consent\" required>\n            <label class=\"custom-control-label\" for=\"consent\">\n              Agree with terms and conditions\n            </label>\n          </div>\n        </div>\n        <div class=\"pt-3\">\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!guestForm.form.valid\" (click)=\"save()\">Save</button>\n          <button class=\"btn btn-danger ml-2\" (click)=\"delete()\">Delete</button>\n          <button class=\"btn btn-secondary ml-2\" (click)=\"back()\">Close</button>\n        </div>\n    </form>\n</div>\n\n<div>\n  <app-calendar [reload]=\"reloadCalendar.asObservable()\"></app-calendar>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\nimport { ScheduleService } from '../service/schedule.service';\nimport { Schedule } from '../domain/schedule';\nimport { Router } from '@angular/router';\nimport { share } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  schedules: Schedule[];\n  userid: string;\n\n  constructor(\n    public auth: AuthService,\n    private scheduleService: ScheduleService,  \n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.auth.userid$.subscribe(userid=>{\n      this.userid = userid;\n      this.scheduleService.getSchedulesByUserId(userid).subscribe(schedules => {\n        this.schedules = schedules\n      })      \n    })\n  }\n  \n  add(): void {\n    this.scheduleService.createSchedule({userId: this.userid} as Schedule).subscribe(schedule => {\n        this.router.navigate(['/edit', schedule.id]);\n      })\n  }  \n\n}\n","<div class=\"container\" *ngIf=\"auth.isLoggedIn\">\n    <div>\n        <table class=\"table table-striped table-hover pt-3\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">View</th>\n                    <th scope=\"col\">Config</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let schedule of schedules; index as i\">\n                    <th>{{schedule.name}}</th>\n                    <td><a routerLink=\"/calendar/{{schedule.id}}\"><i class=\"fa fa-calendar\"></i></a></td>\n                    <td><a routerLink=\"/edit/{{schedule.id}}\"><i class=\"fa fa-edit\"></i></a></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div>\n        <button type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"add()\">New</button>\n    </div>    \n</div>","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport * as auth0 from 'auth0-js';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthService {\n  // Create Auth0 web auth instance\n  auth0 = new auth0.WebAuth({\n    clientID: environment.auth.clientID,\n    domain: environment.auth.domain,\n    responseType: 'id_token token',\n    redirectUri: environment.auth.redirect,\n    audience: environment.auth.audience,\n    scope: environment.auth.scope\n  });\n  // Store authentication data\n  expiresAt: number;\n  accessToken: string;\n  authenticated: boolean;\n\n  private useridSubject$ = new BehaviorSubject<any>(null);\n  private userEmailSubject$ = new BehaviorSubject<any>(null);\n  userid$ = this.useridSubject$.asObservable();  \n  userEmail$ = this.userEmailSubject$.asObservable();    \n\n  constructor(private router: Router) {\n    this.getAccessToken();\n  }\n\n  login() {\n    // Auth0 authorize request\n    this.auth0.authorize();\n  }\n\n  handleLoginCallback() {\n    // When Auth0 hash parsed, get profile\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken) {\n        window.location.hash = '';\n        this.getUserInfo(authResult);\n      } else if (err) {\n        console.error(`Error: ${err.error}`);\n      }\n      this.router.navigate(['/']);\n    });\n  }\n\n  getAccessToken() {\n    this.auth0.checkSession({}, (err, authResult) => {\n      if (authResult && authResult.accessToken) {\n        this.getUserInfo(authResult);\n      }\n    });\n  }\n\n  getUserInfo(authResult) {\n    // Use access token to retrieve user's profile and set session\n    this.auth0.client.userInfo(authResult.accessToken, (err, profile) => {\n      if (profile) {\n        this._setSession(authResult, profile);\n      }\n    });\n  }\n\n  private _setSession(authResult, profile) {\n    // Save authentication data and update login status subject\n    this.expiresAt = authResult.expiresIn * 1000 + Date.now();\n    this.accessToken = authResult.accessToken;\n    this.authenticated = true;\n    this.useridSubject$.next(profile.sub);\n    this.userEmailSubject$.next(profile.email);\n  }\n\n  logout() {\n    // Log out of Auth0 session\n    // Ensure that returnTo URL is specified in Auth0\n    // Application settings for Allowed Logout URLs\n    sessionStorage.clear();\n    this.auth0.logout({\n      returnTo: 'http://localhost:4200',\n      clientID: environment.auth.clientID\n    });\n  }\n\n  get isLoggedIn(): boolean {\n    // Check if current date is before token\n    // expiration and user is signed in locally\n    return Date.now() < this.expiresAt && this.authenticated;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { CalendarEvent } from 'angular-calendar';\nimport { ScheduleEvent } from 'src/app/domain/scheduleEvent';\nimport { ScheduleEventsResponse } from '../domain/scheduleEventsResponse';\nimport { Appointment } from '../domain/appointment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private baseUrl = environment.baseUrl + '/events';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json',  observe: 'response', responseType: 'text'})\n  };\n \n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getDummyCalendarEvents(): Observable<ScheduleEvent[]> {\n    return this.http.get<ScheduleEvent[]>(this.baseUrl);\n  }\n\n  getCalendarEventsByScheduleId(scheduleId: string): Observable<ScheduleEventsResponse> {\n    const url = `${this.baseUrl}/${scheduleId}`;\n    return this.http.get<ScheduleEventsResponse>(url);\n  }\n\n  addReservation(calendarEvent: Appointment): Observable<any> {\n    return this.http.post<Appointment>(this.baseUrl, calendarEvent, {observe: 'response', });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Schedule } from 'src/app/domain/schedule';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScheduleService {\n  private baseUrl = environment.baseUrl + '/schedule';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json',  observe: 'response'})\n  };\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  createSchedule(schedule: Schedule): Observable<Schedule> {\n    return this.http.post<Schedule>(this.baseUrl, schedule, this.httpOptions);\n  }\n\n  getSchedulesByUserId(userId: string): Observable<Schedule[]> {\n    const url = `${this.baseUrl}/user/${userId}`;\n    return this.http.get<Schedule[]>(url);\n  }  \n\n  getScheduleById(id: string): Observable<Schedule> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<Schedule>(url);\n  }    \n\n  save(schedule: Schedule): Observable<any> {\n    return this.http.post<Schedule>(this.baseUrl, schedule, {observe: 'response'});\n  }  \n\n  delete(id: string): Observable<any> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete<Schedule>(url, this.httpOptions);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { ScheduleService } from 'src/app/service/schedule.service';\nimport { Schedule } from 'src/app/domain/schedule';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n  constructor(\n    public auth: AuthService,\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n\n\n\n\n}\n","<div class=\"container pt-3\">\n\n    <!-- <strong>{{auth.accessToken}}</strong> -->\n    <!-- <strong>{{auth.userId}}</strong> -->\n\n    <div *ngIf=\"auth.isLoggedIn\">\n        <p>{{ auth.profile | json }}</p>\n    </div>\n\n    <!-- <div *ngIf=\"auth.userId\">\n        {{auth.userId}}\n    </div> -->\n\n    <div *ngIf=\"!auth.isLoggedIn\">\n        <!-- <div> -->\n        <p>Please login first to view or create new schedules</p>\n        <button type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"auth.login()\">Login in</button>\n    </div>\n\n    <div *ngIf=\"auth.isLoggedIn\">\n        <button type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"auth.logout()\">Logout</button>\n    </div>\n\n    <div *ngIf=\"auth.isLoggedIn\">\n        <a [routerLink]=\"['/profile']\" routerLinkActive=\"router-link-active\" >Go to profile</a>\n    </div>    \n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080',\n  auth: {\n    clientID: 'pCb7m5IPa62ZpWC3gMkuDu54drA98BZs',\n    domain: 'kunzou.auth0.com',\n    audience: 'https://kunzou.auth0.com/api/v2/',\n    redirect: 'http://localhost:4200/callback',\n    scope: 'openid profile email'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}